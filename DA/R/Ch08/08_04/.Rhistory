USJudgeRatings[1:5, ]
reg1 <- lm(RTEN ~ CONT + INTG + DMNR + DILG + CFMG +
DECI + PREP + FAMI + ORAL + WRIT + PHYS,
data = USJudgeRatings)
reg1  # Gives the coefficients only
?USJudgeRatings
summary(reg1)
anova(reg1)
coef(reg1)  # Or coefficients(reg1)
confint(reg1)  # CI for coefficients
resid(reg1)  # Or residuals; Residuals case-by-case
hist(residuals(reg1))  # Histogram of residuals
regb  # Show just the coefficients
regb <- step(reg1,
direction = "backward",
trace = 0)  # Don't print the steps
regb  # Show just the coefficients
summary(regb)
reg0 <- lm(RTEN ~ 1, data = USJudgeRatings)  # Minimal model
reg0
regf <- step(reg0,  # Start with minimal model
direction = "forward",
scope = (~ CONT + INTG + DMNR + DILG + CFMG + DECI +
PREP + FAMI + ORAL + WRIT + PHYS),
data = USJudgeRatings,
trace = 0)  # Don't print the steps
regf
summary(regf)
require("rms")
help(package = "rms")
detach("package:rms", unload=TRUE)
rm(list = ls())
boxplot(breaks ~ wool*tension, data = warpbreaks)
data(warpbreaks)
aov1 <- aov(breaks ~
wool + tension + wool:tension,
data = warpbreaks)
summary(aov1)
model.tables(aov1)
# Second way to specify
aov2 <- aov(breaks ~
wool*tension,
data = warpbreaks)
aov2 <- aov(breaks ~
wool*tension,
data = warpbreaks)
model.tables(aov2)
model.tables(aov2, type = "effects")  # "effects" is default
model.tables(aov2, type = "means")
model.tables(aov2, type = "means", se = TRUE)  # "se" = standard error
TukeyHSD(aov1)
boxplot(breaks ~ wool*tension, data = warpbreaks)
remove(list = ls())  # Clean up
mtcars[1:5, ]
mtcars1 <- mtcars[, c(1:4, 6:7, 9:11)]  # Select variables
mtcars1[1:5, ]
d <- dist(mtcars1)
d
d[1:5, ]
fix(d)
d[1:5]
c <- hclust(d)
c
plot(c)
g3 <- cutree(c, k = 3)  # "g3" = "groups 3"
# cutree(hcmt, h = 230) will give same result
g3
gm <- cutree(c, k = 2:5) # or k = c(2, 4)
gm
rect.hclust(c, k = 2, border = "gray")
rect.hclust(c, k = 3, border = "blue")
rect.hclust(c, k = 4, border = "green4")
rect.hclust(c, k = 5, border = "red")
rect.hclust(c, k = 5, border = "darkred")
km <- kmeans(mtcars1, 3)
km
require(cluster)
clusplot(mtcars1,  # data frame
km$cluster,  # cluster data
color = TRUE,  # color
#          shade = TRUE,  # Lines in clusters
lines = 3,  # Lines connecting centroids
labels = 2)  # Labels clusters and cases
labels = 2)  # Labels clusters and cases
clusplot(mtcars1,  # data frame
km$cluster,  # cluster data
color = TRUE,  # color
shade = TRUE,  # Lines in clusters
lines = 3,  # Lines connecting centroids
labels = 2)  # Labels clusters and cases
clusplot(mtcars1,  # data frame
km$cluster,  # cluster data
color = TRUE,  # color
#          shade = TRUE,  # Lines in clusters
lines = 3,  # Lines connecting centroids
labels = 2)  # Labels clusters and cases
mtcars[1:5, ]
mtcars1 <- mtcars[, c(1:4, 6:7, 9:11)]  # Select variables
mtcars1[1:5, ]
pc <- prcomp(mtcars1,
center = TRUE,  # Centers means to 0 (optional)
scale = TRUE)  # Sets unit variance (helpful)
summary(pc)
plot(pc)
pc
predict(pc)
predict(pc)[1:5]
predict(pc)
biplot(pc)
factanal(mtcars1, 1)
factanal(mtcars1, 2)
factanal(mtcars1, 3)
factanal(mtcars1, 4)  # First w/p > .05
rm(list = ls())  # Clean up
