x = c(12, 4, 21, 17, 13, 9)
barplot(x)
browseURL("http://colorbrewer2.org/")  # Uses Flash
browseURL("http://colorbrewer2.org/")  # Uses Flash
x = c(12, 4, 21, 17, 13, 9)
barplot(x)
browseURL("http://colorbrewer2.org/")  # Uses Flash
install.packages("RColorBrewer")
require("RColorBrewer")
help(package = "RColorBrewer")
display.brewer.all()
display.brewer.pal(8, "Accent")
display.brewer.pal(4, "Spectral")
blues <- brewer.pal(6, "Blues")
blues <- brewer.pal(6, "Blues")
barplot(x, col = blues)
barplot(x, col = brewer.pal(6, "Greens"))
barplot(x, col = brewer.pal(6, "YlOrRd"))
barplot(x, col = brewer.pal(6, "RdGy"))
barplot(x, col = brewer.pal(6, "BrBG"))
barplot(x, col = brewer.pal(6, "Dark2"))
barplot(x, col = brewer.pal(6, "Paired"))
barplot(x, col = brewer.pal(6, "Pastel2"))
barplot(x, col = brewer.pal(6, "Set3"))
palette("default")  # Return to default
detach("package:RColorBrewer", unload = TRUE)
rm(list = ls())
# HELP ON PLOTS
?plot
# LOAD DATASETS PACKAGE
require("datasets")
# ONE ROW PER CASE
?chickwts
chickwts  # Look at data
data(chickwts)  # Load data into workspace
# Quickest Method
plot(chickwts$feed)  # Plot feed from chickwts
?plot
# "barplot" offers more control but must prepare data:
# R doesn't create bar charts directly from the categorical
# variables; instead, we must first create a table that
# has the frequencies for each level of the variable.
feeds <- table(chickwts$feed)
feeds
barplot(feeds)  # Identical to plot(chickwts$feed)
?barplot
# To put the bars in descending order, add "order":
barplot(feeds[order(feeds, decreasing = TRUE)])
# Customize the chart
par(oma = c(1, 1, 1, 1))  # Sets outside margins: b, l, t, r
par(mar = c(4, 5, 2, 1))  # Sets plot margins
barplot(feeds[order(feeds)],
horiz  = TRUE,
las    = 1,  # las gives orientation of axis labels
col    = c("beige", "blanchedalmond", "bisque1", "bisque2", "bisque3", "bisque4"),
border = NA,  # No borders on bars
main   = "Frequencies of Different Feeds\nin chickwts Dataset",  # \n = line break
xlab   = "Number of Chicks")
?par
# SAVING IMAGES
# Hard way: Via R's code
# To save as an image file, first open a device and specify format
# EITHER this one for PNG file
png(filename= "~/Desktop/R/Ex02_01a.png",
width = 888,
height = 571)
png(filename= "~/Desktop/R/Ex02_01a.png",
width = 888,
height = 571)
# OR this one for PDF file
pdf("Ex02_01b.pdf",
width = 9,
height = 6)
png(filename= "~/Desktop/R/Ex02_01a.png",
width = 888,
height = 571)
par(oma = c(1, 1, 1, 1))  # Sets outside margins: b, l, t, r
par(mar = c(4, 5, 2, 1))  # Sets plot marginsbarplot(feeds[order(feeds)],
barplot(feeds[order(feeds)],
horiz  = TRUE,
las    = 1,  # las gives orientation of axis labels
col    = c("beige", "blanchedalmond", "bisque1", "bisque2", "bisque3", "bisque4"),
border = NA,  # No borders on bars
main   = "Frequencies of Different Feeds\nin chickwts Dataset",  # \n = line break
xlab   = "Number of Chicks")
# Then close device
dev.off()
?plot
require("datasets")
?chickwts
chickwts  # Look at data
data(chickwts)  # Load data into workspace
plot(chickwts$feed)  # Plot feed from chickwts
plot(chickwts$feed)  # Plot feed from chickwts
plot(chickwts$feed)  # Plot feed from chickwts
plot(chickwts)  # Plot feed from chickwts
x = c(12, 4, 21, 17, 13, 9)
barplot(x)
dev.off()
plot(chickwts)  # Plot feed from chickwts
